import * as L from 'leaflet';
import {GeoJsonTypes} from 'geojson';

import {Area, Artist} from 'src/types';

// generated by https://geojson-maps.ash.ms/
import * as worldData from 'data/world.geo.json';
import * as artists from 'data/artists.json';

import config from 'src/config';

import 'leaflet/dist/leaflet.css';
import 'src/app.scss';

const {MAPBOX_ACCESS_TOKEN} = process.env;
const {map: {defaultView, tileLayerOptions}} = config;

function getAreasPlaycounts(artists: Artist[]): {[area: string]: number} {
  const areasPlaycounts = {};

  artists.forEach((artist) => {
    if (!(artist.area in areasPlaycounts)) {
      areasPlaycounts[artist.area] = artist.playcount;
    } else {
      areasPlaycounts[artist.area] += artist.playcount;
    }
  });

  return areasPlaycounts;
}

const areasPlaycounts = getAreasPlaycounts(artists as any);

console.log(areasPlaycounts);

const areas = (worldData as any).features.filter((area: Area) => area.properties.name_sort in areasPlaycounts);
const geojson = {
  type: 'FeatureCollection' as GeoJsonTypes,
  features: areas,
};

const map = L.map('map').setView(defaultView.center, defaultView.zoom);

L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
  ...tileLayerOptions,
  accessToken: MAPBOX_ACCESS_TOKEN,
}).addTo(map);

L.geoJSON(geojson).addTo(map);

(window as any).L = L;
(window as any).map = map;
