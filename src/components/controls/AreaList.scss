@import '../../app-consts';

.AreaList {
  transition-property: opacity, transform;
  transform: translate(0, 80%);

  opacity: 0.8;

  // overriding ".PlaycountMap__control" padding with only the "vertical" value,
  // because its immediate children are rectangular blocks (not plain text) so it looks better symmetrically
  &.leaflet-control {
    padding: $leaflet-control-padding-vertical-block;
  }

  &:hover {
    transform: translate(0, 0);

    opacity: 1;
  }

  // avoids map selection if a cursor goes to the left or below the element
  &::after {
    position: absolute;
    z-index: -1;
    top: 0;
    right: 0;
    bottom: -$leaflet-control-margin;
    left: -$leaflet-control-margin;

    content: '';
  }
}

.AreaList__area-list {
  overflow: auto;

  max-height: calc(100vh - #{$leaflet-control-zoom-height + $leaflet-control-margin * 3 + $leaflet-control-padding-vertical-block * 2});
  padding-right: $scrollbar-width; // compensates the scrollbar
}

.AreaList__area {
  position: relative;

  display: flex;
  align-items: center;
  overflow: hidden;

  margin: 0.6em 0;
  padding-right: 6px;

  cursor: default;

  &:first-of-type {
    margin-top: 0;
  }

  &:last-of-type {
    margin-bottom: 0;
  }

  .AreaList[disabled] & {
    pointer-events: none; // prevents from highlighting many countries while the cursor stays but the legend moves
  }
}

@keyframes slideIn {
  from {
    right: 100%;
  }

  to {
    right: 0;
  }
}

.AreaList__area-scale-container {
  position: absolute;
  z-index: 1; // keeping ".AreaList__area-rank" below, important for ignoring its border
  top: 2px;
  bottom: 2px;
  left: 26px;

  .AreaList:hover & {
    animation-name: slideIn;
    animation-fill-mode: forwards;
  }

  .AreaList__area:hover & {
    top: 0;
    bottom: 0;
  }
}

.AreaList__area-scale {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;

  opacity: 0.4;

  &--top {
    bottom: 50%;
  }

  &--bottom {
    top: 50%;
  }
}

@mixin Ledend__area-rank-medal($color) {
  position: absolute;
  top: calc(-20% - 2px);
  left: calc(-20% - 2px);

  width: 40%;
  height: 40%;

  content: '';

  border: 2px solid var(--area-rank-border-color);
  border-radius: 50%;
  background-color: $color;
}

.AreaList__area-rank {
  // playing with "background-clip" avoids subpixel extension of "background-color" over the border
  // (strangely it appears depending on the "max-height" value of the ".AreaList__area-list")

  font-size: 10px;
  line-height: 24px;

  position: relative;

  box-sizing: border-box;

  width: 28px;
  min-width: 28px;
  height: 28px;
  padding-right: 0.2em;

  text-align: right;

  border: 2px solid var(--area-rank-border-color);
  background-clip: padding-box;

  .AreaList__area:nth-child(1) & {
    &::before {
      @include Ledend__area-rank-medal(gold);
    }
  }

  .AreaList__area:nth-child(2) & {
    &::before {
      @include Ledend__area-rank-medal(silver);
    }
  }

  .AreaList__area:nth-child(3) & {
    &::before {
      @include Ledend__area-rank-medal(#8c7853);
    }
  }

  .AreaList__area:hover & {
    border-color: transparent;
    background-clip: border-box; // to show the border with the same color as "background-color"
  }
}

.AreaList__area-flag {
  position: absolute;
  bottom: calc(-20% - 2px);
  left: calc(-20% - 2px);

  width: 40%;
  height: 40%;

  border: 2px solid var(--area-rank-border-color);
  border-radius: 50%;
  background-repeat: no-repeat;

  .AreaList__area:hover & {
    bottom: -4px;
    left: -4px;

    width: 50%;
    height: 50%;

    border-radius: 0;
  }
}

.AreaList__area-name,
.AreaList__area-stats {
  z-index: 2; // keeping ".AreaList__area-scale-container" below, important for text color and "title" attribute

  white-space: nowrap;
}

.AreaList__area-name {
  margin: 0 10px;
}

.AreaList__area-stats {
  color: var(--list-item-color);

  .AreaList__area:hover & {
    color: var(--list-item-color--hover);
  }

  > * {
    margin: 0 4px;

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }
}
